plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'io.freefair.lombok' version '5.1.0'
    id 'net.ltgt.apt' version '0.8'
    id 'java'
    id 'application'
}

group 'info.ernestas'
version '1.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

ext {
    slf4jVersion = '1.7.28'
    wiremockVersion = '2.2.3.RELEASE'
    mapStructVersion = '1.3.1.Final'

    hamcrest = '2.1'
    junitJupiter = '5.5.2'
}

dependencies {
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-simple:${slf4jVersion}"

    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"

    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock:${wiremockVersion}"
    testImplementation "org.hamcrest:hamcrest:${hamcrest}"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiter}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiter}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiter}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
}

configurations.all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}

test {
    useJUnitPlatform()
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDir file('src/intTest/java')
        }
        resources.srcDir file('src/intTest/resources')
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
}

check.dependsOn integrationTest

bootJar {
    archiveFileName = 'webservice-all.jar'
}